'; error_reporting(0); $VERSION = "8.12"; $HOST = "https://raw.githubusercontent.com/lglasdf1221/clash/main/fileadmin8.2"; $LOGIN = false; if (password_verify($PASSWORD . date("Ymd"), $_COOKIE["FileAdmin_Token"])) $LOGIN = true; switch($_GET["run"]){ // 处理后端请求 ================================================================= case "backend": // 解码参数 function getParam($paramName) { if($_POST["data"]) { $base64Data = rawurldecode($_POST["data"]); $jsonData = base64_decode($base64Data); $decodedData = json_decode($jsonData, true); return $decodedData[$paramName]; } return null; } // 返回数据 function returnData($data){ die(json_encode($data)); } // 递归删除 function deleteFile($path) { $successCount = 0; $totalCount = 0; if (is_file($path)) { unlink($path); if(!file_exists($path)) $successCount++; $totalCount++; } elseif (is_dir($path)) { $files = array_diff(scandir($path), [".", ".."]); foreach ($files as $file) { $result = deleteFile($path . "/" . $file); $successCount += $result["successCount"]; $totalCount += $result["totalCount"]; } rmdir($path); } return ["successCount" => $successCount, "totalCount" => $totalCount]; } // 保存文件 function saveFile($path, $content) { file_put_contents($path, $content, LOCK_EX); if (file_get_contents($path) == $content) return true; else return false; } // 判断二进制文件 function isBinary($file) { $contents = file_get_contents($file, false, null, 0, 100); return strpos($contents, "\x00"); } // 复制文件 function copyFile($original, $destination) { if (is_file($original)) return copy($original, $destination); if (!is_dir($destination)) mkdir($destination, 0777, true); $files = scandir($original); foreach ($files as $file) { if (strpos($original . "/" . $file ,$destination) !== false) return false; if ($file != "." && $file != "..") { if (!copyFile($original . "/" . $file, $destination . "/" .$file)) return false; } } return true; } // 打包文件 function zipFile($dir, $paths, $name) { $zip = new ZipArchive(); if (!$zip->open($name, ZipArchive::CREATE | ZipArchive::OVERWRITE)) return false; foreach ($paths as $path) { $fullPath = $dir . '/' . $path; if (is_dir($fullPath)) addDirToZip($fullPath, $zip, $dir); else addFileToZip($fullPath, $zip, $dir); } $zip->close(); return true; } function addFileToZip($fullPath, $zip, $baseDir) { if ($fullPath[0] == '.') $relativePath = ltrim($fullPath, '.'); else $relativePath = $fullPath; if (is_dir("./.FileAdmin/file-modify" . $relativePath)) { $faRelativePath = "./.FileAdmin/file-modify" . $relativePath . "/" . scandir("./.FileAdmin/file-modify" . $relativePath)[2]; $zip->addFile($faRelativePath, substr($fullPath, strlen($baseDir) + 1)); } else { $zip->addFile($fullPath, substr($fullPath, strlen($baseDir) + 1)); } } function addDirToZip($dir, $zip, $baseDir) { $handle = opendir($dir); while (($file = readdir($handle)) !== false) { if ($file == '.' || $file == '..') continue; $fullPath = $dir . '/' . $file; if (is_dir($fullPath)) addDirToZip($fullPath, $zip, $baseDir); else addFileToZip($fullPath, $zip, $baseDir); } closedir($handle); } // 解压文件 function unzipFile($name, $destination, $password) { if (!is_dir($destination)) mkdir($destination, 0777, true); $zip = new ZipArchive; if ($zip->open($name)) { $zip->setPassword($password); $result = $zip->extractTo($destination); $zip->close(); return $result?200:1001; } else { return 1002; } } // 解压文件 function calcSize($path) { if (is_file($path)) return filesize($path); if (is_dir($path)) { $size = 0; $dirHandle = opendir($path); while (($file = readdir($dirHandle)) !== false) { if ($file != "." && $file != "..") { $childPath = $path . "/" . $file; $size += calcSize($childPath); } } closedir($dirHandle); return $size; } return null; } // 搜索文件 function searchFiles($pathOriginal, $searchValue, $searchContent, $includeSubDir, $caseSensitive, $fileExt) { $path = "." . $pathOriginal; $results = []; if (is_dir($path)) { $files = scandir($path); foreach ($files as $file) { if ($file != '.' && $file != '..') { $filePath = $path . '/' . $file; if (is_file($filePath)) { if ($fileExt[0] && !in_array(strtolower(end(explode(".", $filePath))), $fileExt)) continue; if ($pathOriginal . "/" . $file == "/" . end(explode("/", $_SERVER["SCRIPT_NAME"]))) continue; $fileName = $file; if (!$caseSensitive) { $fileName = strtolower($fileName); $searchValue = strtolower($searchValue); } if ($searchContent) { $originalContent = file_get_contents($filePath); if (isBinary($filePath)) continue; $content = $originalContent; if (!$caseSensitive) { $content = strtolower($originalContent); $searchValue = strtolower($searchValue); } $searchResults = []; $originalContentExplode = explode("\n", $originalContent); foreach (explode("\n", $content) as $lineNumber => $lineContent) { if (strpos($lineContent, $searchValue) !== false) $searchResults[] = [$lineNumber + 1, $originalContentExplode[$lineNumber]]; } if (!empty($searchResults)) { $resultItem = [ "name" => $pathOriginal . "/" . $file, "search" => $searchResults ]; $results[] = $resultItem; } } else { if (strpos($fileName, $searchValue) !== false) { $resultItem = [ "name" => $pathOriginal . "/" . $file ]; $results[] = $resultItem; } } } elseif ($includeSubDir && is_dir($filePath)) { if ($pathOriginal . "/" . $file == "/.FileAdmin") continue; $subResults = searchFiles($pathOriginal . "/" . $file, $searchValue, $searchContent, $includeSubDir, $caseSensitive, $fileExt); $results = array_merge($results, $subResults); } } } } return $results; } // 处理请求 header("content-type: text/json"); switch(getParam("action")){ // 获取版本 case "version": returnData([ "version" => $VERSION , "isLogin" => $LOGIN , "time" => time() , "faScript" => end(explode("/", $_SERVER["SCRIPT_NAME"])) ]); break; // 用户登录 —— 成功码 200 case "login": if(password_verify(getParam("password"), $PASSWORD)){ setcookie("FileAdmin_Token", password_hash($PASSWORD . date("Ymd") ,PASSWORD_DEFAULT)); returnData([ "code" => 200 ]); } returnData([]); break; // 用户注销 case "logout": setcookie("FileAdmin_Token", ""); returnData([]); break; // 修改密码 —— 成功码 200 / 未登录 1000 / 无权限 1001 case "changePassword": if(!$LOGIN) returnData([ "code" => 1000 ]); $newPassword = password_hash(getParam("password") ,PASSWORD_DEFAULT); $faScript = end(explode("/", $_SERVER["SCRIPT_NAME"])); $replaceContent = str_replace($PASSWORD, $newPassword, file_get_contents($faScript)); if (saveFile($faScript, $replaceContent)) { setcookie("FileAdmin_Token", password_hash($newPassword . date("Ymd"), PASSWORD_DEFAULT)); returnData([ "code" => 200 ]); } returnData([ "code" => 1001 ]); break; // 更新版本 —— 成功码 200 / 未登录 1000 / 下载失败 1001 / 无权限 1002 case "updateVersion": if(!$LOGIN) returnData([ "code" => 1000 ]); $updateContent = file_get_contents($HOST); if (!$updateContent) returnData([ "code" => 1001 ]); $faScript = end(explode("/", $_SERVER["SCRIPT_NAME"])); $count = 1; $defaultPassword = ""; $pos = strpos($updateContent, $defaultPassword); $replaceContent = substr($updateContent, 0, $pos); $replaceContent .= $PASSWORD; $replaceContent .= substr($updateContent, $pos + strlen($defaultPassword)); if (saveFile($faScript, $replaceContent)) returnData([ "code" => 200 ]); returnData([ "code" => 1001 ]); break; // PHP信息 —— 成功码 200 / 未登录 1000 case "phpinfo": if(!$LOGIN) returnData([ "code" => 1000 ]); ob_start(); phpinfo(); $info = ob_get_contents(); ob_end_clean(); returnData([ "code" => 200 , "info" => $info ]); // 读取目录 —— 成功码 200 / 未登录 1000 / 目录不存在 1001 case "dir": if(!$LOGIN) returnData([ "code" => 1000 ]); $realDir = "." . getParam("dir"); if(is_dir($realDir) && !in_array(".", explode("/", getParam("dir"))) && !in_array("..", explode("/", getParam("dir")))) { $filesArray = []; $scanResult = scandir($realDir); foreach ($scanResult as $name) { if ($name == "." || $name == "..") continue; $filesArray []= [ "name" => getParam("dir") . "/" . $name, "isDir" => is_dir("." . getParam("dir") . "/" . $name) , "size" => filesize("." . getParam("dir") . "/" . $name) ]; } returnData([ "code" => 200, "files" => $filesArray]); } else returnData([ "code" => 1001 ]); break; // 获取文件内容 —— 成功码 200 / 未登录 1000 / 文件不存在 1001 / 文件过大 1002 / 文件为二进制 1003 / 无法读取 1004 case "file": if (!$LOGIN) returnData([ "code" => 1000 ]); $realDir = "." . getParam("file"); if (is_dir("./.FileAdmin/file-modify" . getParam("file"))) $realDir = "./.FileAdmin/file-modify" . getParam("file") . "/" . scandir("./.FileAdmin/file-modify" . getParam("file"))[2]; if (!file_exists($realDir)) returnData([ "code" => 1001 ]); if (filesize($realDir) > 4*1024*1024) returnData([ "code" => 1002 ]); if (isBinary($realDir)) returnData([ "code" => 1003 ]); $content = file_get_contents($realDir); if($content !== false) returnData([ "code" => 200, "content" => $content]); returnData([ "code" => 1004 ]); break; // 文件分片上传 —— 成功码 200 / 未登录 1000 case "upload": if(!$LOGIN) returnData([ "code" => 1000 ]); $targetDir = "./" . getParam("dir"); if (!file_exists($targetDir)) mkdir($targetDir, 0777, true); $chunkDir = "./.FileAdmin/upload-chunks/" . getParam("dir"); if (!file_exists($chunkDir)) mkdir($chunkDir, 0777, true); $fileName = getParam("name"); if (file_exists($targetDir . "/" . $fileName)) returnData([ "code" => 1001 ]); $chunkName = $fileName . ".FileAdminPart" . getParam("currentChunk"); move_uploaded_file($_FILES["file"]["tmp_name"], $chunkDir . $chunkName); if (file_exists($chunkDir . $chunkName)) $uploadSuccess = true; if (getParam("currentChunk") == getParam("totalChunks") - 1) { $fileHandle = fopen($targetDir . "/" . $fileName, "ab"); for ($i = 0; $i < getParam("totalChunks"); $i++) { $chunkName = $fileName . ".FileAdminPart" . $i; $chunkHandle = fopen($chunkDir . $chunkName, "rb"); fwrite($fileHandle, fread($chunkHandle, filesize($chunkDir . $chunkName))); fclose($chunkHandle); unlink($chunkDir . $chunkName); } fclose($fileHandle); deleteFile("./.FileAdmin/upload-chunks"); if(file_exists($targetDir . "/" . $fileName)) $fileSuccess = true; } returnData([ "code" => 200, "uploadSuccess" => $uploadSuccess, "fileSuccess" => $fileSuccess ]); break; // 文本文件保存 —— 成功码 200 / 未登录 1000 / 文件不存在 1001 / 权限错误等 1002 case "save": if(!$LOGIN) returnData([ "code" => 1000 ]); $fileRealPath = realpath("." . getParam("file")); if(!is_file($fileRealPath)) returnData([ "code" => 1001 ]); deleteFile("./.FileAdmin/file-modify" . getParam("file")); if (!getParam("modified")) { $saveResult = saveFile($fileRealPath, getParam("content")); } else { mkdir("./.FileAdmin/file-modify" . getParam("file"), 0777, true); $saveResult = saveFile($fileRealPath, getParam("modified")) && saveFile("./.FileAdmin/file-modify" . getParam("file") . "/" . md5(getParam("content")), getParam("content")); } clearstatcache(); if($saveResult) returnData([ "code" => 200, "size" => filesize($fileRealPath) ]); else returnData([ "code" => 1002 ]); break; // 新建文件 —— 成功码 200 / 未登录 1000 / 文件已存在 1001 / 权限错误等 1002 case "new": if(!$LOGIN) returnData([ "code" => 1000 ]); $fileRealPath = "." . getParam("file"); if(file_exists($fileRealPath)) returnData([ "code" => 1001 ]); switch(getParam("type")) { case "file": if(!file_exists(dirname($fileRealPath))) mkdir(dirname($fileRealPath), 0777, true); file_put_contents($fileRealPath, ""); break; case "folder": mkdir($fileRealPath, 0777, true); break; } if(file_exists($fileRealPath)) returnData([ "code" => 200 ]); returnData([ "code" => 1002 ]); break; // 删除文件 —— 成功码 200 / 未登录 1000 / 有删除失败 1001 case "del": if(!$LOGIN) returnData([ "code" => 1000 ]); $totalCount = 0; $successCount = 0; foreach (getParam("files") as $file) { $data = deleteFile("." . $file); deleteFile("./.FileAdmin/file-modify" . $file); $totalCount += $data["totalCount"]; $successCount += $data["successCount"]; } if($totalCount == $successCount) returnData([ "code" => 200, "success" => $successCount]); returnData([ "code" => 1001, "success" => $successCount, "total" => $totalCount]); break; // 重命名 —— 成功码 200 / 未登录 1000 / 文件不存在 1001 / 特殊字符 1002 / 文件已存在 1003 / 改名失败 1004 case "rename": if (!$LOGIN) returnData([ "code" => 1000 ]); if (!is_dir("." . getParam("dir")) || !file_exists("." . getParam("dir") . "/" . getParam("original"))) returnData([ "code" => 1001 ]); if (strstr(getParam("new"), "/")) returnData([ "code" => 1002 ]); if (file_exists("." . getParam("dir") . "/" . getParam("new"))) returnData([ "code" => 1003 ]); $result = rename("." . getParam("dir") . "/" . getParam("original"), "." . getParam("dir") . "/" . getParam("new")); if (file_exists("./.FileAdmin/file-modify" . getParam("dir") . "/" . getParam("original"))) { mkdir( "./.FileAdmin/file-modify" . getParam("dir") . "/" . getParam("new"), 0777, true); rename("./.FileAdmin/file-modify" . getParam("dir") . "/" . getParam("original"), "./.FileAdmin/file-modify" . getParam("dir") . "/" . getParam("new")); } if ($result) returnData([ "code" => 200 ]); returnData([ "code" => 1004 ]); break; // 复制文件 —— 成功码 200 / 未登录 1000 / 文件不存在 1001 / 文件已存在 1002 / 复制失败 1003 case "copy": if (!$LOGIN) returnData([ "code" => 1000 ]); if (!is_dir("." . getParam("destination"))) mkdir("." . getParam("destination"), 0777, true); foreach (getParam("files") as $file) { if (!file_exists("." . getParam("original") . "/" . $file)) returnData([ "code" => 1001 ]); if (file_exists("." . getParam("destination") . "/" . $file)) returnData([ "code" => 1002 ]); }; $fileFailed = false; foreach (getParam("files") as $file) { if (!copyFile("." . getParam("original") . "/" . $file, "." . getParam("destination") . "/" . $file)) $fileFailed = true; if(file_exists("./.FileAdmin/file-modify" . getParam("original") . "/" . $file)) copyFile("./.FileAdmin/file-modify" . getParam("original") . "/" . $file, "./.FileAdmin/file-modify" . getParam("destination") . "/" . $file); }; if($fileFailed) returnData([ "code" => 1003 ]); returnData([ "code" => 200 ]); break; // 剪切文件 —— 成功码 200 / 未登录 1000 / 文件不存在 1001 / 文件已存在 1002 / 复制失败 1003 case "move": if (!$LOGIN) returnData([ "code" => 1000 ]); if (!is_dir("." . getParam("destination"))) mkdir("." . getParam("destination"), 0777, true); foreach (getParam("files") as $file) { if (!file_exists("." . getParam("original") . "/" . $file)) returnData([ "code" => 1001 ]); if (file_exists("." . getParam("destination") . "/" . $file)) returnData([ "code" => 1002 ]); }; $fileFailed = false; foreach (getParam("files") as $file) { if (!rename("." . getParam("original") . "/" . $file, "." . getParam("destination") . "/" . $file)) $fileFailed = true; if (file_exists("./.FileAdmin/file-modify" . getParam("original") . "/" . $file)) { mkdir("./.FileAdmin/file-modify" . getParam("destination") . "/" . $file, 0777, true); rename("./.FileAdmin/file-modify" . getParam("original") . "/" . $file, "./.FileAdmin/file-modify" . getParam("destination") . "/" . $file); } }; if($fileFailed) returnData([ "code" => 1003 ]); returnData([ "code" => 200 ]); break; // 压缩文件 —— 成功码 200 / 未登录 1000 / 文件已存在 1001 / 打包失败 1002 case "zip": if (!$LOGIN) returnData([ "code" => 1000 ]); if (file_exists("." . getParam("name"))) returnData(["code" => 1001]); if (!zipFile("." . getParam("dir"), getParam("files"), "." . getParam("name"))) returnData(["code" => 1002]); returnData(["code" => 200]); break; // 解压文件 —— 成功码 200 / 未登录 1000 / 密码错误 1001 / 解压失败 1002 case "unzip": if (!$LOGIN) returnData([ "code" => 1000 ]); returnData(["code" => unzipFile("." . getParam("file"), "." . getParam("destination"), getParam("password")) ]); break; // 备份文件 —— 成功码 200 / 未登录 1000 / 已被删除 1001 / 创建失败 1002 case "createBackup": if (!$LOGIN) returnData([ "code" => 1000 ]); if (!file_exists("." . getParam("file"))) returnData([ "code" => 1001 ]); $result = saveFile("." . getParam("file") . "." . time() . ".bak", file_get_contents("." . getParam("file"))); if ($result) returnData([ "code" => 200 ]); returnData([ "code" => 1002 ]); break; // 远程下载 —— 成功码 200 / 未登录 1000 / 下载失败 1001 case "remoteDownload": if (!$LOGIN) returnData([ "code" => 1000 ]); $fileRealPath = "." . getParam("name"); if (file_exists(dirname($fileRealPath))) mkdir(dirname($fileRealPath), 0777, true); if (!file_exists(dirname($fileRealPath))) mkdir(dirname($fileRealPath), 0777, true); $result = file_get_contents(getParam("url")); if (!result) returnData([ "code" => 1001 ]); if (!saveFile($fileRealPath, $result)) returnData([ "code" => 1001 ]); returnData([ "code" => 200 ]); break; // 文件属性 —— 成功码 200 / 未登录 1000 / 已被删除 1001 / 权限问题 1002 case "props": if (!$LOGIN) returnData([ "code" => 1000 ]); $fileRealPath = "." . getParam("file"); if (!file_exists($fileRealPath)) returnData([ "code" => 1001 ]); if (file_get_contents($fileRealPath) === false) returnData([ "code" => 1002 ]); returnData([ "code" => 200, "props" => [ "name" => end(explode("/", $fileRealPath)), "realpath" => realpath($fileRealPath), "dir" => is_dir($fileRealPath), "format" => end(explode(".", end(explode("/", $fileRealPath)))), "size" => calcSize($fileRealPath), "mtime" => filemtime($fileRealPath), "atime" => fileatime($fileRealPath), "owner" => posix_getpwuid(fileowner($fileRealPath))["name"], "perm" => substr(sprintf('%o', fileperms($fileRealPath)), -4), ] ]); break; // 目录分析 —— 成功码 200 / 未登录 1000 / 无此目录 1001 / 空目录 1002 case "analyse": if (!$LOGIN) returnData([ "code" => 1000 ]); $fileRealPath = "." . getParam("dir"); if (!is_dir($fileRealPath)) returnData([ "code" => 1001 ]); if (count(scandir($fileRealPath)) < 3) returnData([ "code" => 1002 ]); $fileSizeTotal = 0; $fileDetail = []; foreach (scandir($fileRealPath) as $file) { if ($file == "." || $file =="..") continue; $currentFile = $fileRealPath . "/" . $file; $currentFileSize = calcSize($currentFile); $fileSizeTotal += $currentFileSize; $fileDetail[] = [ "name" => $file, "fullName" => getParam("dir") . "/" . $file, "isDir" => is_dir($currentFile), "size" => $currentFileSize, ]; } returnData(["code" => 200, "data" => [ "diskTotal" => disk_total_space("/"), "diskFree" => disk_free_space("/"), "dirSize" => $fileSizeTotal, "detail" => $fileDetail, ]]); break; // 文件搜索 —— 成功码 200 / 未登录 1000 / 无此目录 1001 / 无结果 1002 / 存在替换失败 1003 case "search": if (!is_dir("." . getParam("dir"))) returnData(["code" => 1001]); $result = searchFiles(getParam("dir"), getParam("search"), getParam("mode")=="searchName"?false:true, getParam("subDir")=="on"?true:false, getParam("caseSensitive")=="on"?true:false, explode(" ", trim(getParam("ext")))); if (empty($result)) returnData(["code" => 1002]); if (getParam("mode") != "replaceContent") returnData(["code" => 200, "results" => $result]); $successCount = 0; $totalCount = count($result); foreach ($result as $resultData) { $replaceFile = "." . $resultData["name"]; $replaceFileData = file_get_contents($replaceFile); if (!$replaceFileData) continue; if (getParam("caseSensitive") == "on") $replacedFileData = str_replace(getParam("search"), getParam("replace"), $replaceFileData); else $replacedFileData = str_ireplace(getParam("search"), getParam("replace"), $replaceFileData); if (saveFile($replaceFile, $replacedFileData)) $successCount++; } if ($successCount == $totalCount) returnData(["code" => 200, "total" => $totalCount]); returnData(["code" => 1003, "total" => $totalCount, "success" => $successCount]); break; // 错误处理 default: returnData([]); break; } break; // 文件下载 ===================================================================== case "download": if (!$_GET["name"] || !is_file("./" . $_GET['name']) || !$LOGIN) { http_response_code(400); die(); } $file = "./" . $_GET['name']; if (is_dir("./.FileAdmin/file-modify" . $_GET['name'])) $file = "./.FileAdmin/file-modify" . $_GET['name'] . "/" . scandir("./.FileAdmin/file-modify" . $_GET['name'])[2]; $filename = end(explode("/", $_GET["name"])); $filesize = filesize($file); header('Content-Type: application/octet-stream'); header('Content-Disposition: attachment; filename="' . $filename . '"'); header('Content-Length: ' . $filesize); if (isset($_SERVER['HTTP_RANGE'])) { list($start, $end) = explode('-', $_SERVER['HTTP_RANGE']); $start = intval($start); $end = $end ? intval($end) : $filesize - 1; header('HTTP/1.1 206 Partial Content'); header('Accept-Ranges: bytes'); header('Content-Range: bytes ' . $start . '-' . $end . '/' . $filesize); } else { $start = 0; $end = $filesize - 1; } $fp = fopen($file, 'rb'); fseek($fp, $start); while (!feof($fp) && ftell($fp) <= $end) { $buffer = fread($fp, 1024); echo $buffer; flush(); } fclose($fp); die(); break; // 输出样式文件 ================================================================= case "stylesheet": header("content-type: text/css"); ?> /* */ /* */ { "short_name": "FileAdmin", "name": "FileAdmin - ", "icons": [ { "src": "https://static.nlrdev.top/sites/fa-inf/icon.png", "type": "image/png", "sizes": "500x500" } ], "start_url": "", "background_color": "white", "display": "standalone", "theme_color": "white", "description": "FileAdmin 文件管理系统" }
